select(Country, Date, Confirmed) %>%
group_by(Country, Date) %>%
summarise(Confirmed = sum(Confirmed)) %>%
ungroup() %>%
filter(Country %in% countries,
Date >= today_date)) %>%
v2 <- plot_all_countries %>%
mutate(Confirmed = replace_na(Confirmed, 0)) %>%
group_by(Country, Date) %>%
summarise(Confirmed = sum(Confirmed)))
plot_all_countries <- predicted_cases %>%
select(-c(day_after)) %>%
bind_rows(confirmed %>%
select(Country, Date, Confirmed) %>%
group_by(Country, Date) %>%
summarise(Confirmed = sum(Confirmed)) %>%
ungroup() %>%
filter(Country %in% countries,
Date >= today_date)) %>%
v2 <- plot_all_countries %>%
mutate(Confirmed = replace_na(Confirmed, 0)) %>%
group_by(Country, Date) %>%
summarise(Confirmed = sum(Confirmed))
v2 <- plot_all_countries %>%
mutate(Confirmed = replace_na(Confirmed, 0)) %>%
group_by(Country, Date) %>%
summarise(Confirmed = sum(Confirmed))
View(v2)
v2 <- plot_all_countries %>%
mutate(Confirmed = replace_na(Confirmed, 0)) %>%
group_by(Country, Date) %>%
summarise(Confirmed = sum(Confirmed), predict = sum(preidct))
v2 <- plot_all_countries %>%
mutate(Confirmed = replace_na(Confirmed, 0)) %>%
group_by(Country, Date) %>%
summarise(Confirmed = sum(Confirmed), predict = sum(predict))
View(v2)
v2 <- plot_all_countries %>%
mutate(Confirmed = replace_na(Confirmed, 0),
predict = replace_na(predict, 0)) %>%
group_by(Country, Date) %>%
summarise(Confirmed = sum(Confirmed), predict = sum(predict))
View(v2)
plot_all_countries <- predicted_cases %>%
select(-c(day_after)) %>%
bind_rows(confirmed %>%
select(Country, Date, Confirmed) %>%
group_by(Country, Date) %>%
summarise(Confirmed = sum(Confirmed)) %>%
ungroup() %>%
filter(Country %in% countries,
Date >= today_date))  %>%
mutate(Confirmed = replace_na(Confirmed, 0),
predict = replace_na(predict, 0)) %>%
group_by(Country, Date) %>%
summarise(Confirmed = sum(Confirmed), predict = sum(predict)) %>%
reshape(direction  = "wide", idvar="Date", timevar="Country") %>%
plot_ly() %>%
add_trace(x=~Date, y=~predict.Portugal, name = "Prediction Portugal", type = 'scatter', mode = 'lines', line = list(color = 'rgb(0, 255, 0)', width = 2.5, dash = 'dot')) %>%
add_trace(x=~Date, y=~Confirmed.Portugal, name = "Real Portugal", type = 'scatter', mode = 'lines', line = list(color = 'rgb(0, 255, 0)', width = 2.5)) %>%
add_trace(x=~Date, y=~predict.Spain, name = "Prediction Spain", type = 'scatter', mode = 'lines', line = list(color = 'rgb(255,215,0)', width = 2.5, dash = 'dot')) %>%
add_trace(x=~Date, y=~Confirmed.Spain, name = "Real Spain", type = 'scatter', mode = 'lines', line = list(color = 'rgb(255,215,0)', width = 2.5)) %>%
add_trace(x=~Date, y=~predict.France, name = "Prediction France", type = 'scatter', mode = 'lines', line = list(color = 'rgb(255, 0, 0)', width = 2.5, dash = 'dot')) %>%
add_trace(x=~Date, y=~Confirmed.France, name = "Real France", type = 'scatter', mode = 'lines', line = list(color = 'rgb(255, 0, 0)', width = 2.5)) %>%
add_trace(x=~Date, y=~predict.Germany, name = "Prediction Germany", type = 'scatter', mode = 'lines', line = list(color = 'rgb(139,69,19)', width = 2.5, dash = 'dot')) %>%
add_trace(x=~Date, y=~Confirmed.Germany, name = "Real Germany", type = 'scatter', mode = 'lines', line = list(color = 'rgb(139,69,19)', width = 2.5)) %>%
add_trace(x=~Date, y=~predict.Italy, name = "Prediction Italy", type = 'scatter', mode = 'lines', line = list(color = 'rgb(0,100,0)', width = 2.5, dash = 'dot')) %>%
add_trace(x=~Date, y=~Confirmed.Italy, name = "Real Italy", type = 'scatter', mode = 'lines', line = list(color = 'rgb(0,100,0)', width = 2.5)) %>%
add_trace(x=~Date, y=~`predict.United Kingdom`, name = "Prediction UK", type = 'scatter', mode = 'lines', line = list(color = 'rgb(25,25,112)', width = 2.5, dash = 'dot')) %>%
add_trace(x=~Date, y=~`Confirmed.United Kingdom`, name = "Real UK", type = 'scatter', mode = 'lines', line = list(color = 'rgb(25,25,112)', width = 2.5)) %>%
add_trace(x=~Date, y=~predict.US, name = "Prediction USA", type = 'scatter', mode = 'lines', line = list(color = 'rgb(105,105,105)', width = 2.5, dash = 'dot')) %>%
add_trace(x=~Date, y=~Confirmed.US, name = "Real USA", type = 'scatter', mode = 'lines', line = list(color = 'rgb(105,105,105)', width = 2.5)) %>%
layout(xaxis = list(title = "Date"),
yaxis = list(title = "Number of Cases"),
title = "Prediction of future cases (using exponential curve)")
plot_all_countries
plot_all_countries <- predicted_cases %>%
select(-c(day_after)) %>%
bind_rows(confirmed %>%
select(Country, Date, Confirmed) %>%
group_by(Country, Date) %>%
summarise(Confirmed = sum(Confirmed)) %>%
ungroup() %>%
filter(Country %in% countries,
Date >= today_date))  %>%
mutate(Confirmed = replace_na(Confirmed, 0),
predict = replace_na(predict, 0)) %>%
group_by(Country, Date) %>%
summarise(Confirmed = sum(Confirmed), predict = sum(predict)) %>%
reshape(direction  = "wide", idvar="Date", timevar="Country")
View(plot_all_countries)
predicted_cases %>%
select(-c(day_after)) %>%
bind_rows(confirmed %>%
select(Country, Date, Confirmed) %>%
group_by(Country, Date) %>%
summarise(Confirmed = sum(Confirmed)) %>%
ungroup() %>%
filter(Country %in% countries,
Date >= today_date))  %>%
mutate(Confirmed = replace_na(Confirmed, 0),
predict = replace_na(predict, 0)) %>%
group_by(Country, Date) %>%
summarise(Confirmed = sum(Confirmed), predict = sum(predict)) %>%
ungroup() %>%
reshape(direction  = "wide", idvar="Date", timevar="Country")
predicted_cases %>%
select(-c(day_after)) %>%
bind_rows(confirmed %>%
select(Country, Date, Confirmed) %>%
group_by(Country, Date) %>%
summarise(Confirmed = sum(Confirmed)) %>%
ungroup() %>%
filter(Country %in% countries,
Date >= today_date))  %>%
mutate(Confirmed = replace_na(Confirmed, 0),
predict = replace_na(predict, 0)) %>%
group_by(Country, Date) %>%
summarise(Confirmed = sum(Confirmed), predict = sum(predict))
predicted_cases %>%
select(-c(day_after)) %>%
bind_rows(confirmed %>%
select(Country, Date, Confirmed) %>%
group_by(Country, Date) %>%
summarise(Confirmed = sum(Confirmed)) %>%
ungroup() %>%
filter(Country %in% countries,
Date >= today_date))  %>%
mutate(Confirmed = replace_na(Confirmed, 0),
predict = replace_na(predict, 0)) %>%
group_by(Country, Date) %>%
summarise(Confirmed = sum(Confirmed), predict = sum(predict)) %>%
ungroup() %>%
mutate_if(is.double, as.numeric)
plot_all_countries <- predicted_cases %>%
select(-c(day_after)) %>%
bind_rows(confirmed %>%
select(Country, Date, Confirmed) %>%
group_by(Country, Date) %>%
summarise(Confirmed = sum(Confirmed)) %>%
ungroup() %>%
filter(Country %in% countries,
Date >= today_date))  %>%
mutate(Confirmed = replace_na(Confirmed, 0),
predict = replace_na(predict, 0)) %>%
group_by(Country, Date) %>%
summarise(Confirmed = sum(Confirmed), predict = sum(predict)) %>%
ungroup() %>%
mutate_if(is.double, as.numeric)
reshape(direction  = "wide", idvar="Date", timevar="Country")
predicted_cases %>%
select(-c(day_after)) %>%
bind_rows(confirmed %>%
select(Country, Date, Confirmed) %>%
group_by(Country, Date) %>%
summarise(Confirmed = sum(Confirmed)) %>%
ungroup() %>%
filter(Country %in% countries,
Date >= today_date))  %>%
mutate(Confirmed = replace_na(Confirmed, 0),
predict = replace_na(predict, 0)) %>%
group_by(Country, Date) %>%
summarise(Confirmed = sum(Confirmed), predict = sum(predict)) %>%
ungroup() %>%
mutate_if(is.double, as.numeric)
reshape2::dcast(direction  = "wide", idvar="Date", timevar="Country")
predicted_cases %>%
select(-c(day_after)) %>%
bind_rows(confirmed %>%
select(Country, Date, Confirmed) %>%
group_by(Country, Date) %>%
summarise(Confirmed = sum(Confirmed)) %>%
ungroup() %>%
filter(Country %in% countries,
Date >= today_date))  %>%
mutate(Confirmed = replace_na(Confirmed, 0),
predict = replace_na(predict, 0)) %>%
group_by(Country, Date) %>%
summarise(Confirmed = sum(Confirmed), predict = sum(predict)) %>%
ungroup() %>%
mutate_if(is.double, as.numeric) %>%
reshape2::dcast(direction  = "wide", idvar="Date", timevar="Country")
plot_all_countries <- predicted_cases %>%
select(-c(day_after)) %>%
bind_rows(confirmed %>%
select(Country, Date, Confirmed) %>%
group_by(Country, Date) %>%
summarise(Confirmed = sum(Confirmed)) %>%
ungroup() %>%
filter(Country %in% countries,
Date >= today_date))  %>%
mutate(Confirmed = replace_na(Confirmed, 0),
predict = replace_na(predict, 0)) %>%
group_by(Country, Date) %>%
summarise(Confirmed = sum(Confirmed), predict = sum(predict))
View(plot_all_countries)
predicted_cases %>%
select(-c(day_after)) %>%
# bind_rows(confirmed %>%
#             select(Country, Date, Confirmed) %>%
#             group_by(Country, Date) %>%
#             summarise(Confirmed = sum(Confirmed)) %>%
#             ungroup() %>%
#             filter(Country %in% countries,
#                    Date >= today_date))  %>%
# mutate(Confirmed = replace_na(Confirmed, 0),
#        predict = replace_na(predict, 0)) %>%
# group_by(Country, Date) %>%
# summarise(Confirmed = sum(Confirmed), predict = sum(predict))
mutate(#march 18 values source ("https://www.worldometers.info/coronavirus/")
Confirmed = if_else((Country=="Portugal") & Date==as.Date("2020-03-18"),642,Confirmed),
Confirmed = if_else((Country=="Spain") & Date==as.Date("2020-03-18"),14769,Confirmed),
Confirmed = if_else((Country=="Italy") & Date==as.Date("2020-03-18"),35713,Confirmed),
Confirmed = if_else((Country=="Germany") & Date==as.Date("2020-03-18"),12327,Confirmed),
Confirmed = if_else((Country=="France") & Date==as.Date("2020-03-18"),9134,Confirmed),
Confirmed = if_else((Country=="United Kingdom") & Date==as.Date("2020-03-18"),2626,Confirmed),
Confirmed = if_else((Country=="US") & Date==as.Date("2020-03-18"),8893,Confirmed),
#### march 19 values source("https://www.worldometers.info/coronavirus/")
Confirmed = if_else((Country=="Portugal") & Date==as.Date("2020-03-19"),785,Confirmed),
Confirmed = if_else((Country=="Spain") & Date==as.Date("2020-03-19"),17963,Confirmed),
Confirmed = if_else((Country=="Italy") & Date==as.Date("2020-03-19"),41035,Confirmed),
Confirmed = if_else((Country=="Germany") & Date==as.Date("2020-03-19"),15320,Confirmed),
Confirmed = if_else((Country=="France") & Date==as.Date("2020-03-19"),10995,Confirmed),
Confirmed = if_else((Country=="United Kingdom") & Date==as.Date("2020-03-19"),3269,Confirmed),
Confirmed = if_else((Country=="US") & Date==as.Date("2020-03-19"),11689,Confirmed),
#### march 20 values source("https://www.worldometers.info/coronavirus/")
Confirmed = if_else((Country=="Portugal") & Date==as.Date("2020-03-20"),785,Confirmed),
Confirmed = if_else((Country=="Spain") & Date==as.Date("2020-03-20"),17963,Confirmed),
Confirmed = if_else((Country=="Italy") & Date==as.Date("2020-03-20"),41035,Confirmed),
Confirmed = if_else((Country=="Germany") & Date==as.Date("2020-03-20"),15320,Confirmed),
Confirmed = if_else((Country=="France") & Date==as.Date("2020-03-20"),10995,Confirmed),
Confirmed = if_else((Country=="United Kingdom") & Date==as.Date("2020-03-20"),3269,Confirmed),
Confirmed = if_else((Country=="US") & Date==as.Date("2020-03-20"),11689,Confirmed)
)
predicted_cases %>%
select(-c(day_after)) %>%
bind_rows(confirmed %>%
select(Country, Date, Confirmed) %>%
group_by(Country, Date) %>%
summarise(Confirmed = sum(Confirmed)) %>%
ungroup() %>%
filter(Country %in% countries,
Date >= today_date))  %>%
mutate(Confirmed = replace_na(Confirmed, 0),
predict = replace_na(predict, 0)) %>%
group_by(Country, Date) %>%
summarise(Confirmed = sum(Confirmed), predict = sum(predict)) %>%
data.frame()
plot_all_countries <- predicted_cases %>%
select(-c(day_after)) %>%
bind_rows(confirmed %>%
select(Country, Date, Confirmed) %>%
group_by(Country, Date) %>%
summarise(Confirmed = sum(Confirmed)) %>%
ungroup() %>%
filter(Country %in% countries,
Date >= today_date))  %>%
mutate(Confirmed = replace_na(Confirmed, 0),
predict = replace_na(predict, 0)) %>%
group_by(Country, Date) %>%
summarise(Confirmed = sum(Confirmed), predict = sum(predict)) %>%
data.frame() %>%
# mutate(#march 18 values source ("https://www.worldometers.info/coronavirus/")
#        Confirmed = if_else((Country=="Portugal") & Date==as.Date("2020-03-18"),642,Confirmed),
#        Confirmed = if_else((Country=="Spain") & Date==as.Date("2020-03-18"),14769,Confirmed),
#        Confirmed = if_else((Country=="Italy") & Date==as.Date("2020-03-18"),35713,Confirmed),
#        Confirmed = if_else((Country=="Germany") & Date==as.Date("2020-03-18"),12327,Confirmed),
#        Confirmed = if_else((Country=="France") & Date==as.Date("2020-03-18"),9134,Confirmed),
#        Confirmed = if_else((Country=="United Kingdom") & Date==as.Date("2020-03-18"),2626,Confirmed),
#        Confirmed = if_else((Country=="US") & Date==as.Date("2020-03-18"),8893,Confirmed),
#        #### march 19 values source("https://www.worldometers.info/coronavirus/")
#        Confirmed = if_else((Country=="Portugal") & Date==as.Date("2020-03-19"),785,Confirmed),
#        Confirmed = if_else((Country=="Spain") & Date==as.Date("2020-03-19"),17963,Confirmed),
#        Confirmed = if_else((Country=="Italy") & Date==as.Date("2020-03-19"),41035,Confirmed),
#        Confirmed = if_else((Country=="Germany") & Date==as.Date("2020-03-19"),15320,Confirmed),
#        Confirmed = if_else((Country=="France") & Date==as.Date("2020-03-19"),10995,Confirmed),
#        Confirmed = if_else((Country=="United Kingdom") & Date==as.Date("2020-03-19"),3269,Confirmed),
#        Confirmed = if_else((Country=="US") & Date==as.Date("2020-03-19"),11689,Confirmed),
#        #### march 20 values source("https://www.worldometers.info/coronavirus/")
#        Confirmed = if_else((Country=="Portugal") & Date==as.Date("2020-03-20"),785,Confirmed),
#        Confirmed = if_else((Country=="Spain") & Date==as.Date("2020-03-20"),17963,Confirmed),
#        Confirmed = if_else((Country=="Italy") & Date==as.Date("2020-03-20"),41035,Confirmed),
#        Confirmed = if_else((Country=="Germany") & Date==as.Date("2020-03-20"),15320,Confirmed),
#        Confirmed = if_else((Country=="France") & Date==as.Date("2020-03-20"),10995,Confirmed),
#        Confirmed = if_else((Country=="United Kingdom") & Date==as.Date("2020-03-20"),3269,Confirmed),
#        Confirmed = if_else((Country=="US") & Date==as.Date("2020-03-20"),11689,Confirmed)
#        ) %>%
# na_if(0) %>%
reshape(direction  = "wide", idvar="Date", timevar="Country") %>%
plot_ly() %>%
add_trace(x=~Date, y=~predict.Portugal, name = "Prediction Portugal", type = 'scatter', mode = 'lines', line = list(color = 'rgb(0, 255, 0)', width = 2.5, dash = 'dot')) %>%
add_trace(x=~Date, y=~Confirmed.Portugal, name = "Real Portugal", type = 'scatter', mode = 'lines', line = list(color = 'rgb(0, 255, 0)', width = 2.5)) %>%
add_trace(x=~Date, y=~predict.Spain, name = "Prediction Spain", type = 'scatter', mode = 'lines', line = list(color = 'rgb(255,215,0)', width = 2.5, dash = 'dot')) %>%
add_trace(x=~Date, y=~Confirmed.Spain, name = "Real Spain", type = 'scatter', mode = 'lines', line = list(color = 'rgb(255,215,0)', width = 2.5)) %>%
add_trace(x=~Date, y=~predict.France, name = "Prediction France", type = 'scatter', mode = 'lines', line = list(color = 'rgb(255, 0, 0)', width = 2.5, dash = 'dot')) %>%
add_trace(x=~Date, y=~Confirmed.France, name = "Real France", type = 'scatter', mode = 'lines', line = list(color = 'rgb(255, 0, 0)', width = 2.5)) %>%
add_trace(x=~Date, y=~predict.Germany, name = "Prediction Germany", type = 'scatter', mode = 'lines', line = list(color = 'rgb(139,69,19)', width = 2.5, dash = 'dot')) %>%
add_trace(x=~Date, y=~Confirmed.Germany, name = "Real Germany", type = 'scatter', mode = 'lines', line = list(color = 'rgb(139,69,19)', width = 2.5)) %>%
add_trace(x=~Date, y=~predict.Italy, name = "Prediction Italy", type = 'scatter', mode = 'lines', line = list(color = 'rgb(0,100,0)', width = 2.5, dash = 'dot')) %>%
add_trace(x=~Date, y=~Confirmed.Italy, name = "Real Italy", type = 'scatter', mode = 'lines', line = list(color = 'rgb(0,100,0)', width = 2.5)) %>%
add_trace(x=~Date, y=~`predict.United Kingdom`, name = "Prediction UK", type = 'scatter', mode = 'lines', line = list(color = 'rgb(25,25,112)', width = 2.5, dash = 'dot')) %>%
add_trace(x=~Date, y=~`Confirmed.United Kingdom`, name = "Real UK", type = 'scatter', mode = 'lines', line = list(color = 'rgb(25,25,112)', width = 2.5)) %>%
add_trace(x=~Date, y=~predict.US, name = "Prediction USA", type = 'scatter', mode = 'lines', line = list(color = 'rgb(105,105,105)', width = 2.5, dash = 'dot')) %>%
add_trace(x=~Date, y=~Confirmed.US, name = "Real USA", type = 'scatter', mode = 'lines', line = list(color = 'rgb(105,105,105)', width = 2.5)) %>%
layout(xaxis = list(title = "Date"),
yaxis = list(title = "Number of Cases"),
title = "Prediction of future cases (using exponential curve)")
predicted_cases %>%
select(-c(day_after)) %>%
bind_rows(confirmed %>%
select(Country, Date, Confirmed) %>%
group_by(Country, Date) %>%
summarise(Confirmed = sum(Confirmed)) %>%
ungroup() %>%
filter(Country %in% countries,
Date >= today_date))  %>%
mutate(Confirmed = replace_na(Confirmed, 0),
predict = replace_na(predict, 0)) %>%
group_by(Country, Date) %>%
summarise(Confirmed = sum(Confirmed), predict = sum(predict)) %>%
data.frame() %>%
# mutate(#march 18 values source ("https://www.worldometers.info/coronavirus/")
#        Confirmed = if_else((Country=="Portugal") & Date==as.Date("2020-03-18"),642,Confirmed),
#        Confirmed = if_else((Country=="Spain") & Date==as.Date("2020-03-18"),14769,Confirmed),
#        Confirmed = if_else((Country=="Italy") & Date==as.Date("2020-03-18"),35713,Confirmed),
#        Confirmed = if_else((Country=="Germany") & Date==as.Date("2020-03-18"),12327,Confirmed),
#        Confirmed = if_else((Country=="France") & Date==as.Date("2020-03-18"),9134,Confirmed),
#        Confirmed = if_else((Country=="United Kingdom") & Date==as.Date("2020-03-18"),2626,Confirmed),
#        Confirmed = if_else((Country=="US") & Date==as.Date("2020-03-18"),8893,Confirmed),
#        #### march 19 values source("https://www.worldometers.info/coronavirus/")
#        Confirmed = if_else((Country=="Portugal") & Date==as.Date("2020-03-19"),785,Confirmed),
#        Confirmed = if_else((Country=="Spain") & Date==as.Date("2020-03-19"),17963,Confirmed),
#        Confirmed = if_else((Country=="Italy") & Date==as.Date("2020-03-19"),41035,Confirmed),
#        Confirmed = if_else((Country=="Germany") & Date==as.Date("2020-03-19"),15320,Confirmed),
#        Confirmed = if_else((Country=="France") & Date==as.Date("2020-03-19"),10995,Confirmed),
#        Confirmed = if_else((Country=="United Kingdom") & Date==as.Date("2020-03-19"),3269,Confirmed),
#        Confirmed = if_else((Country=="US") & Date==as.Date("2020-03-19"),11689,Confirmed),
#        #### march 20 values source("https://www.worldometers.info/coronavirus/")
#        Confirmed = if_else((Country=="Portugal") & Date==as.Date("2020-03-20"),785,Confirmed),
#        Confirmed = if_else((Country=="Spain") & Date==as.Date("2020-03-20"),17963,Confirmed),
#        Confirmed = if_else((Country=="Italy") & Date==as.Date("2020-03-20"),41035,Confirmed),
#        Confirmed = if_else((Country=="Germany") & Date==as.Date("2020-03-20"),15320,Confirmed),
#        Confirmed = if_else((Country=="France") & Date==as.Date("2020-03-20"),10995,Confirmed),
#        Confirmed = if_else((Country=="United Kingdom") & Date==as.Date("2020-03-20"),3269,Confirmed),
#        Confirmed = if_else((Country=="US") & Date==as.Date("2020-03-20"),11689,Confirmed)
#        ) %>%
# na_if(0) %>%
reshape(direction  = "wide", idvar="Date", timevar="Country")
plot_all_countries
plot_all_countries <- predicted_cases %>%
select(-c(day_after)) %>%
bind_rows(confirmed %>%
select(Country, Date, Confirmed) %>%
group_by(Country, Date) %>%
summarise(Confirmed = sum(Confirmed)) %>%
ungroup() %>%
filter(Country %in% countries,
Date >= today_date))  %>%
mutate(Confirmed = replace_na(Confirmed, 0),
predict = replace_na(predict, 0)) %>%
group_by(Country, Date) %>%
summarise(Confirmed = sum(Confirmed), predict = sum(predict)) %>%
data.frame() %>%
# mutate(#march 18 values source ("https://www.worldometers.info/coronavirus/")
#        Confirmed = if_else((Country=="Portugal") & Date==as.Date("2020-03-18"),642,Confirmed),
#        Confirmed = if_else((Country=="Spain") & Date==as.Date("2020-03-18"),14769,Confirmed),
#        Confirmed = if_else((Country=="Italy") & Date==as.Date("2020-03-18"),35713,Confirmed),
#        Confirmed = if_else((Country=="Germany") & Date==as.Date("2020-03-18"),12327,Confirmed),
#        Confirmed = if_else((Country=="France") & Date==as.Date("2020-03-18"),9134,Confirmed),
#        Confirmed = if_else((Country=="United Kingdom") & Date==as.Date("2020-03-18"),2626,Confirmed),
#        Confirmed = if_else((Country=="US") & Date==as.Date("2020-03-18"),8893,Confirmed),
#        #### march 19 values source("https://www.worldometers.info/coronavirus/")
#        Confirmed = if_else((Country=="Portugal") & Date==as.Date("2020-03-19"),785,Confirmed),
#        Confirmed = if_else((Country=="Spain") & Date==as.Date("2020-03-19"),17963,Confirmed),
#        Confirmed = if_else((Country=="Italy") & Date==as.Date("2020-03-19"),41035,Confirmed),
#        Confirmed = if_else((Country=="Germany") & Date==as.Date("2020-03-19"),15320,Confirmed),
#        Confirmed = if_else((Country=="France") & Date==as.Date("2020-03-19"),10995,Confirmed),
#        Confirmed = if_else((Country=="United Kingdom") & Date==as.Date("2020-03-19"),3269,Confirmed),
#        Confirmed = if_else((Country=="US") & Date==as.Date("2020-03-19"),11689,Confirmed),
#        #### march 20 values source("https://www.worldometers.info/coronavirus/")
#        Confirmed = if_else((Country=="Portugal") & Date==as.Date("2020-03-20"),785,Confirmed),
#        Confirmed = if_else((Country=="Spain") & Date==as.Date("2020-03-20"),17963,Confirmed),
#        Confirmed = if_else((Country=="Italy") & Date==as.Date("2020-03-20"),41035,Confirmed),
#        Confirmed = if_else((Country=="Germany") & Date==as.Date("2020-03-20"),15320,Confirmed),
#        Confirmed = if_else((Country=="France") & Date==as.Date("2020-03-20"),10995,Confirmed),
#        Confirmed = if_else((Country=="United Kingdom") & Date==as.Date("2020-03-20"),3269,Confirmed),
#        Confirmed = if_else((Country=="US") & Date==as.Date("2020-03-20"),11689,Confirmed)
#        ) %>%
# na_if(0) %>%
reshape(direction  = "wide", idvar="Date", timevar="Country") %>%
arrange(Date)
View(plot_all_countries)
predicted_cases %>%
select(-c(day_after)) %>%
bind_rows(confirmed %>%
select(Country, Date, Confirmed) %>%
group_by(Country, Date) %>%
summarise(Confirmed = sum(Confirmed)) %>%
ungroup() %>%
filter(Country %in% countries,
Date >= today_date))  %>%
mutate(Confirmed = replace_na(Confirmed, 0),
predict = replace_na(predict, 0)) %>%
group_by(Country, Date) %>%
summarise(Confirmed = sum(Confirmed), predict = sum(predict)) %>%
data.frame() %>%
# mutate(#march 18 values source ("https://www.worldometers.info/coronavirus/")
#        Confirmed = if_else((Country=="Portugal") & Date==as.Date("2020-03-18"),642,Confirmed),
#        Confirmed = if_else((Country=="Spain") & Date==as.Date("2020-03-18"),14769,Confirmed),
#        Confirmed = if_else((Country=="Italy") & Date==as.Date("2020-03-18"),35713,Confirmed),
#        Confirmed = if_else((Country=="Germany") & Date==as.Date("2020-03-18"),12327,Confirmed),
#        Confirmed = if_else((Country=="France") & Date==as.Date("2020-03-18"),9134,Confirmed),
#        Confirmed = if_else((Country=="United Kingdom") & Date==as.Date("2020-03-18"),2626,Confirmed),
#        Confirmed = if_else((Country=="US") & Date==as.Date("2020-03-18"),8893,Confirmed),
#        #### march 19 values source("https://www.worldometers.info/coronavirus/")
#        Confirmed = if_else((Country=="Portugal") & Date==as.Date("2020-03-19"),785,Confirmed),
#        Confirmed = if_else((Country=="Spain") & Date==as.Date("2020-03-19"),17963,Confirmed),
#        Confirmed = if_else((Country=="Italy") & Date==as.Date("2020-03-19"),41035,Confirmed),
#        Confirmed = if_else((Country=="Germany") & Date==as.Date("2020-03-19"),15320,Confirmed),
#        Confirmed = if_else((Country=="France") & Date==as.Date("2020-03-19"),10995,Confirmed),
#        Confirmed = if_else((Country=="United Kingdom") & Date==as.Date("2020-03-19"),3269,Confirmed),
#        Confirmed = if_else((Country=="US") & Date==as.Date("2020-03-19"),11689,Confirmed),
#        #### march 20 values source("https://www.worldometers.info/coronavirus/")
#        Confirmed = if_else((Country=="Portugal") & Date==as.Date("2020-03-20"),785,Confirmed),
#        Confirmed = if_else((Country=="Spain") & Date==as.Date("2020-03-20"),17963,Confirmed),
#        Confirmed = if_else((Country=="Italy") & Date==as.Date("2020-03-20"),41035,Confirmed),
#        Confirmed = if_else((Country=="Germany") & Date==as.Date("2020-03-20"),15320,Confirmed),
#        Confirmed = if_else((Country=="France") & Date==as.Date("2020-03-20"),10995,Confirmed),
#        Confirmed = if_else((Country=="United Kingdom") & Date==as.Date("2020-03-20"),3269,Confirmed),
#        Confirmed = if_else((Country=="US") & Date==as.Date("2020-03-20"),11689,Confirmed)
#        ) %>%
# na_if(0) %>%
reshape(direction  = "wide", idvar="Date", timevar="Country") %>%
arrange(Date)
plot_ly() %>%
add_trace(x=~Date, y=~predict.Portugal, name = "Prediction Portugal", type = 'scatter', mode = 'lines', line = list(color = 'rgb(0, 255, 0)', width = 2.5, dash = 'dot')) %>%
add_trace(x=~Date, y=~Confirmed.Portugal, name = "Real Portugal", type = 'scatter', mode = 'lines', line = list(color = 'rgb(0, 255, 0)', width = 2.5)) %>%
add_trace(x=~Date, y=~predict.Spain, name = "Prediction Spain", type = 'scatter', mode = 'lines', line = list(color = 'rgb(255,215,0)', width = 2.5, dash = 'dot')) %>%
add_trace(x=~Date, y=~Confirmed.Spain, name = "Real Spain", type = 'scatter', mode = 'lines', line = list(color = 'rgb(255,215,0)', width = 2.5)) %>%
add_trace(x=~Date, y=~predict.France, name = "Prediction France", type = 'scatter', mode = 'lines', line = list(color = 'rgb(255, 0, 0)', width = 2.5, dash = 'dot')) %>%
add_trace(x=~Date, y=~Confirmed.France, name = "Real France", type = 'scatter', mode = 'lines', line = list(color = 'rgb(255, 0, 0)', width = 2.5)) %>%
add_trace(x=~Date, y=~predict.Germany, name = "Prediction Germany", type = 'scatter', mode = 'lines', line = list(color = 'rgb(139,69,19)', width = 2.5, dash = 'dot')) %>%
add_trace(x=~Date, y=~Confirmed.Germany, name = "Real Germany", type = 'scatter', mode = 'lines', line = list(color = 'rgb(139,69,19)', width = 2.5)) %>%
add_trace(x=~Date, y=~predict.Italy, name = "Prediction Italy", type = 'scatter', mode = 'lines', line = list(color = 'rgb(0,100,0)', width = 2.5, dash = 'dot')) %>%
add_trace(x=~Date, y=~Confirmed.Italy, name = "Real Italy", type = 'scatter', mode = 'lines', line = list(color = 'rgb(0,100,0)', width = 2.5)) %>%
add_trace(x=~Date, y=~`predict.United Kingdom`, name = "Prediction UK", type = 'scatter', mode = 'lines', line = list(color = 'rgb(25,25,112)', width = 2.5, dash = 'dot')) %>%
add_trace(x=~Date, y=~`Confirmed.United Kingdom`, name = "Real UK", type = 'scatter', mode = 'lines', line = list(color = 'rgb(25,25,112)', width = 2.5)) %>%
add_trace(x=~Date, y=~predict.US, name = "Prediction USA", type = 'scatter', mode = 'lines', line = list(color = 'rgb(105,105,105)', width = 2.5, dash = 'dot')) %>%
add_trace(x=~Date, y=~Confirmed.US, name = "Real USA", type = 'scatter', mode = 'lines', line = list(color = 'rgb(105,105,105)', width = 2.5)) %>%
layout(xaxis = list(title = "Date"),
yaxis = list(title = "Number of Cases"),
title = "Prediction of future cases (using exponential curve)")
predicted_cases %>%
select(-c(day_after)) %>%
bind_rows(confirmed %>%
select(Country, Date, Confirmed) %>%
group_by(Country, Date) %>%
summarise(Confirmed = sum(Confirmed)) %>%
ungroup() %>%
filter(Country %in% countries,
Date >= today_date))  %>%
mutate(Confirmed = replace_na(Confirmed, 0),
predict = replace_na(predict, 0)) %>%
group_by(Country, Date) %>%
summarise(Confirmed = sum(Confirmed), predict = sum(predict)) %>%
data.frame() %>%
# mutate(#march 18 values source ("https://www.worldometers.info/coronavirus/")
#        Confirmed = if_else((Country=="Portugal") & Date==as.Date("2020-03-18"),642,Confirmed),
#        Confirmed = if_else((Country=="Spain") & Date==as.Date("2020-03-18"),14769,Confirmed),
#        Confirmed = if_else((Country=="Italy") & Date==as.Date("2020-03-18"),35713,Confirmed),
#        Confirmed = if_else((Country=="Germany") & Date==as.Date("2020-03-18"),12327,Confirmed),
#        Confirmed = if_else((Country=="France") & Date==as.Date("2020-03-18"),9134,Confirmed),
#        Confirmed = if_else((Country=="United Kingdom") & Date==as.Date("2020-03-18"),2626,Confirmed),
#        Confirmed = if_else((Country=="US") & Date==as.Date("2020-03-18"),8893,Confirmed),
#        #### march 19 values source("https://www.worldometers.info/coronavirus/")
#        Confirmed = if_else((Country=="Portugal") & Date==as.Date("2020-03-19"),785,Confirmed),
#        Confirmed = if_else((Country=="Spain") & Date==as.Date("2020-03-19"),17963,Confirmed),
#        Confirmed = if_else((Country=="Italy") & Date==as.Date("2020-03-19"),41035,Confirmed),
#        Confirmed = if_else((Country=="Germany") & Date==as.Date("2020-03-19"),15320,Confirmed),
#        Confirmed = if_else((Country=="France") & Date==as.Date("2020-03-19"),10995,Confirmed),
#        Confirmed = if_else((Country=="United Kingdom") & Date==as.Date("2020-03-19"),3269,Confirmed),
#        Confirmed = if_else((Country=="US") & Date==as.Date("2020-03-19"),11689,Confirmed),
#        #### march 20 values source("https://www.worldometers.info/coronavirus/")
#        Confirmed = if_else((Country=="Portugal") & Date==as.Date("2020-03-20"),785,Confirmed),
#        Confirmed = if_else((Country=="Spain") & Date==as.Date("2020-03-20"),17963,Confirmed),
#        Confirmed = if_else((Country=="Italy") & Date==as.Date("2020-03-20"),41035,Confirmed),
#        Confirmed = if_else((Country=="Germany") & Date==as.Date("2020-03-20"),15320,Confirmed),
#        Confirmed = if_else((Country=="France") & Date==as.Date("2020-03-20"),10995,Confirmed),
#        Confirmed = if_else((Country=="United Kingdom") & Date==as.Date("2020-03-20"),3269,Confirmed),
#        Confirmed = if_else((Country=="US") & Date==as.Date("2020-03-20"),11689,Confirmed)
#        ) %>%
# na_if(0) %>%
reshape(direction  = "wide", idvar="Date", timevar="Country") %>%
arrange(Date) %>%
plot_ly() %>%
add_trace(x=~Date, y=~predict.Portugal, name = "Prediction Portugal", type = 'scatter', mode = 'lines', line = list(color = 'rgb(0, 255, 0)', width = 2.5, dash = 'dot')) %>%
add_trace(x=~Date, y=~Confirmed.Portugal, name = "Real Portugal", type = 'scatter', mode = 'lines', line = list(color = 'rgb(0, 255, 0)', width = 2.5)) %>%
add_trace(x=~Date, y=~predict.Spain, name = "Prediction Spain", type = 'scatter', mode = 'lines', line = list(color = 'rgb(255,215,0)', width = 2.5, dash = 'dot')) %>%
add_trace(x=~Date, y=~Confirmed.Spain, name = "Real Spain", type = 'scatter', mode = 'lines', line = list(color = 'rgb(255,215,0)', width = 2.5)) %>%
add_trace(x=~Date, y=~predict.France, name = "Prediction France", type = 'scatter', mode = 'lines', line = list(color = 'rgb(255, 0, 0)', width = 2.5, dash = 'dot')) %>%
add_trace(x=~Date, y=~Confirmed.France, name = "Real France", type = 'scatter', mode = 'lines', line = list(color = 'rgb(255, 0, 0)', width = 2.5)) %>%
add_trace(x=~Date, y=~predict.Germany, name = "Prediction Germany", type = 'scatter', mode = 'lines', line = list(color = 'rgb(139,69,19)', width = 2.5, dash = 'dot')) %>%
add_trace(x=~Date, y=~Confirmed.Germany, name = "Real Germany", type = 'scatter', mode = 'lines', line = list(color = 'rgb(139,69,19)', width = 2.5)) %>%
add_trace(x=~Date, y=~predict.Italy, name = "Prediction Italy", type = 'scatter', mode = 'lines', line = list(color = 'rgb(0,100,0)', width = 2.5, dash = 'dot')) %>%
add_trace(x=~Date, y=~Confirmed.Italy, name = "Real Italy", type = 'scatter', mode = 'lines', line = list(color = 'rgb(0,100,0)', width = 2.5)) %>%
add_trace(x=~Date, y=~`predict.United Kingdom`, name = "Prediction UK", type = 'scatter', mode = 'lines', line = list(color = 'rgb(25,25,112)', width = 2.5, dash = 'dot')) %>%
add_trace(x=~Date, y=~`Confirmed.United Kingdom`, name = "Real UK", type = 'scatter', mode = 'lines', line = list(color = 'rgb(25,25,112)', width = 2.5)) %>%
add_trace(x=~Date, y=~predict.US, name = "Prediction USA", type = 'scatter', mode = 'lines', line = list(color = 'rgb(105,105,105)', width = 2.5, dash = 'dot')) %>%
add_trace(x=~Date, y=~Confirmed.US, name = "Real USA", type = 'scatter', mode = 'lines', line = list(color = 'rgb(105,105,105)', width = 2.5)) %>%
layout(xaxis = list(title = "Date"),
yaxis = list(title = "Number of Cases"),
title = "Prediction of future cases (using exponential curve)")
